----------------------------------------------------------------------------------------------------
-- Assignment Runner: STAR SCHEMA COMPANY (OT)
-- DBI - Datenbanken und Informationssysteme
-- HTL Leonding
-- Author: Jan Ritt
-- Date: 2025-10-05
--
-- Purpose: Orchestrates Star Schema creation and loading in 3 steps
--   1) Create dimension tables (DDL)
--   2) Load dimensions (DML)
--   3) Create and load FACT_SALES
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
-- === Step 1/3: Create Dimensions (DDL) ===
----------------------------------------------------------------------------------------------------

-- Drop existing dimension tables and sequences if present (ignore errors)
BEGIN EXECUTE IMMEDIATE 'DROP TABLE DIM_TIME CASCADE CONSTRAINTS';        EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE DIM_PRODUCT CASCADE CONSTRAINTS';     EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE DIM_CUSTOMER CASCADE CONSTRAINTS';    EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE DIM_EMPLOYEE CASCADE CONSTRAINTS';    EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE DIM_STATUS CASCADE CONSTRAINTS';      EXCEPTION WHEN OTHERS THEN NULL; END; / 

-- Sequences not used; dimensions use IDENTITY columns
-- Clean up any leftover sequences from earlier revisions to avoid conflicts
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE DIM_TIME_SEQ';     EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE DIM_PRODUCT_SEQ';  EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE DIM_CUSTOMER_SEQ'; EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE DIM_EMPLOYEE_SEQ'; EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE DIM_STATUS_SEQ';   EXCEPTION WHEN OTHERS THEN NULL; END; / 

----------------------------------------------------------------------------------------------------
-- DIM_TIME
----------------------------------------------------------------------------------------------------
-- DROP TABLE DIM_TIME CASCADE CONSTRAINT;
CREATE TABLE DIM_TIME (
  ID    NUMBER        GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  YEAR  NUMBER        NOT NULL,
  MONTH NUMBER        NOT NULL,
  DAY   NUMBER        NOT NULL,
  CONSTRAINT UQ_DIM_TIME UNIQUE (YEAR, MONTH, DAY)
);
-- IDENTITY used for DIM_TIME (no sequence)

----------------------------------------------------------------------------------------------------
-- DIM_PRODUCT (denormalized with category)
----------------------------------------------------------------------------------------------------
CREATE TABLE DIM_PRODUCT (
  ID                 NUMBER         GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  PRODUCT_NAME       VARCHAR2(255)  NOT NULL,
  CATEGORY_NAME      VARCHAR2(255)  NOT NULL,
  STANDARD_COST      NUMBER(9,2),
  LIST_PRICE         NUMBER(9,2),
  SOURCE_PRODUCT_ID  NUMBER         NOT NULL,
  CONSTRAINT UQ_DIM_PRODUCT_SRC UNIQUE (SOURCE_PRODUCT_ID)
);
-- IDENTITY used for DIM_PRODUCT (no sequence)

----------------------------------------------------------------------------------------------------
-- DIM_CUSTOMER
----------------------------------------------------------------------------------------------------
CREATE TABLE DIM_CUSTOMER (
  ID                  NUMBER         GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  CUSTOMER_NAME       VARCHAR2(255)  NOT NULL,
  ADDRESS             VARCHAR2(255),
  WEBSITE             VARCHAR2(255),
  CREDIT_LIMIT        NUMBER(8,2),
  SOURCE_CUSTOMER_ID  NUMBER         NOT NULL,
  CONSTRAINT UQ_DIM_CUSTOMER_SRC UNIQUE (SOURCE_CUSTOMER_ID)
);
-- IDENTITY used for DIM_CUSTOMER (no sequence)

----------------------------------------------------------------------------------------------------
-- DIM_EMPLOYEE (salesperson)
----------------------------------------------------------------------------------------------------
CREATE TABLE DIM_EMPLOYEE (
  ID                   NUMBER         GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  FIRST_NAME           VARCHAR2(255)  NOT NULL,
  LAST_NAME            VARCHAR2(255)  NOT NULL,
  EMAIL                VARCHAR2(255)  NOT NULL,
  PHONE                VARCHAR2(50)   NOT NULL,
  HIRE_DATE            DATE           NOT NULL,
  JOB_TITLE            VARCHAR2(255)  NOT NULL,
  SOURCE_EMPLOYEE_ID   NUMBER         NOT NULL,
  CONSTRAINT UQ_DIM_EMPLOYEE_SRC UNIQUE (SOURCE_EMPLOYEE_ID)
);
-- IDENTITY used for DIM_EMPLOYEE (no sequence)

----------------------------------------------------------------------------------------------------
-- DIM_STATUS (order status as small dimension)
----------------------------------------------------------------------------------------------------
CREATE TABLE DIM_STATUS (
  ID      NUMBER        GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  STATUS  VARCHAR2(20)  NOT NULL,
  CONSTRAINT UQ_DIM_STATUS UNIQUE (STATUS)
);
-- IDENTITY used for DIM_STATUS (no sequence)
COMMIT;

----------------------------------------------------------------------------------------------------
-- === Step 2/3: Load Dimensions (DML) ===
----------------------------------------------------------------------------------------------------

-- Clear dimensions (safe if empty)
BEGIN EXECUTE IMMEDIATE 'DELETE FROM DIM_TIME';     EXCEPTION WHEN OTHERS THEN NULL; END; /
BEGIN EXECUTE IMMEDIATE 'DELETE FROM DIM_PRODUCT';  EXCEPTION WHEN OTHERS THEN NULL; END; /
BEGIN EXECUTE IMMEDIATE 'DELETE FROM DIM_CUSTOMER'; EXCEPTION WHEN OTHERS THEN NULL; END; /
BEGIN EXECUTE IMMEDIATE 'DELETE FROM DIM_EMPLOYEE'; EXCEPTION WHEN OTHERS THEN NULL; END; /
BEGIN EXECUTE IMMEDIATE 'DELETE FROM DIM_STATUS';   EXCEPTION WHEN OTHERS THEN NULL; END; /
COMMIT;

----------------------------------------------------------------------------------------------------
-- DIM_TIME from ORDERS.ORDER_DATE
----------------------------------------------------------------------------------------------------
INSERT INTO DIM_TIME (YEAR, MONTH, DAY)
SELECT
  EXTRACT(YEAR  FROM o.order_date) AS year,
  EXTRACT(MONTH FROM o.order_date) AS month,
  EXTRACT(DAY   FROM o.order_date) AS day
FROM (
  SELECT DISTINCT order_date FROM orders WHERE order_date IS NOT NULL
) o
ORDER BY 1;
COMMIT;

----------------------------------------------------------------------------------------------------
-- DIM_PRODUCT from PRODUCTS + PRODUCT_CATEGORIES (denormalized)
----------------------------------------------------------------------------------------------------
INSERT /*+ APPEND */ INTO DIM_PRODUCT (
  PRODUCT_NAME, CATEGORY_NAME, STANDARD_COST, LIST_PRICE, SOURCE_PRODUCT_ID
)
SELECT
  p.product_name,
  c.category_name,
  p.standard_cost,
  p.list_price,
  p.product_id
FROM products p
JOIN product_categories c ON c.category_id = p.category_id;
COMMIT;

----------------------------------------------------------------------------------------------------
-- DIM_CUSTOMER from CUSTOMERS
----------------------------------------------------------------------------------------------------
INSERT /*+ APPEND */ INTO DIM_CUSTOMER (
  CUSTOMER_NAME, ADDRESS, WEBSITE, CREDIT_LIMIT, SOURCE_CUSTOMER_ID
)
SELECT
  c.name,
  c.address,
  c.website,
  c.credit_limit,
  c.customer_id
FROM customers c;
COMMIT; 

----------------------------------------------------------------------------------------------------
-- DIM_EMPLOYEE from EMPLOYEES (salespersons)
----------------------------------------------------------------------------------------------------
INSERT /*+ APPEND */ INTO DIM_EMPLOYEE (
  FIRST_NAME, LAST_NAME, EMAIL, PHONE, HIRE_DATE, JOB_TITLE, SOURCE_EMPLOYEE_ID
)
SELECT
  e.first_name,
  e.last_name,
  e.email,
  e.phone,
  e.hire_date,
  e.job_title,
  e.employee_id
FROM employees e;
COMMIT; 

----------------------------------------------------------------------------------------------------
-- DIM_STATUS from ORDERS.STATUS
----------------------------------------------------------------------------------------------------
INSERT /*+ APPEND */ INTO DIM_STATUS (STATUS)
SELECT s.status
FROM (
  SELECT DISTINCT status FROM orders WHERE status IS NOT NULL
) s;
COMMIT; 

----------------------------------------------------------------------------------------------------
-- === Step 3/3: Create + Load FACT_SALES ===
----------------------------------------------------------------------------------------------------

-- Drop and recreate FACT_SALES to ensure deterministic DDL
BEGIN EXECUTE IMMEDIATE 'DROP TABLE FACT_SALES CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END; /

CREATE TABLE FACT_SALES (
  t          NUMBER       NOT NULL REFERENCES DIM_TIME(id),
  product    NUMBER       NOT NULL REFERENCES DIM_PRODUCT(id),
  customer   NUMBER       NOT NULL REFERENCES DIM_CUSTOMER(id),
  employee   NUMBER           NULL REFERENCES DIM_EMPLOYEE(id),
  status     NUMBER       NOT NULL REFERENCES DIM_STATUS(id),
  order_id   NUMBER       NOT NULL,
  item_id    NUMBER       NOT NULL,
  quantity   NUMBER(8,2)  NOT NULL,
  unit_price NUMBER(8,2)  NOT NULL,
  amount     NUMBER(12,2) NOT NULL,
  CONSTRAINT PK_FACT_SALES PRIMARY KEY (t, product, customer, status, order_id, item_id)
);

-- Idempotent load
BEGIN EXECUTE IMMEDIATE 'DELETE FROM FACT_SALES'; EXCEPTION WHEN OTHERS THEN NULL; END; /
COMMIT;

INSERT /*+ APPEND */ INTO FACT_SALES (
  t, product, customer, employee, status, order_id, item_id, quantity, unit_price, amount
)
SELECT
  tm.id                                              AS t,
  dp.id                                              AS product,
  dc.id                                              AS customer,
  de.id                                              AS employee,
  ds.id                                              AS status,
  o.order_id,
  oi.item_id,
  oi.quantity,
  oi.unit_price,
  (oi.quantity * oi.unit_price)                      AS amount
FROM orders o
JOIN order_items oi       ON oi.order_id = o.order_id
JOIN products p           ON p.product_id = oi.product_id
JOIN DIM_PRODUCT  dp      ON dp.SOURCE_PRODUCT_ID = p.product_id
JOIN DIM_CUSTOMER dc      ON dc.SOURCE_CUSTOMER_ID = o.customer_id
LEFT JOIN DIM_EMPLOYEE de ON de.SOURCE_EMPLOYEE_ID = o.salesman_id
JOIN DIM_STATUS ds        ON ds.STATUS = o.status
JOIN (
  SELECT year, month, day, MIN(id) AS id
  FROM DIM_TIME
  GROUP BY year, month, day
) tm
  ON tm.year  = EXTRACT(YEAR  FROM o.order_date)
 AND tm.month = EXTRACT(MONTH FROM o.order_date)
 AND tm.day   = EXTRACT(DAY   FROM o.order_date);

COMMIT;

-- === DONE === --

SELECT * FROM FACT_SALES;